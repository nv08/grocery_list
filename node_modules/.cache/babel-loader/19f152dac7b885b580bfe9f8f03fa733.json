{"ast":null,"code":"var _jsxFileName = \"/home/nv08/hosted_git/grocery_list/src/components/Tabledata.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Tabledata({\n  data,\n  onDelete,\n  onEdit\n}) {\n  _s();\n\n  const [editable, seteditable] = useState(false);\n  const [updatedValue, setupdatedValue] = useState({\n    item: data.item,\n    units: data.units,\n    unitPrice: data.unitPrice\n  });\n  console.log(dt);\n  const total = useRef(parseInt(data.units) * parseInt(data.unitPrice));\n\n  const handle = (e, fieldName) => {\n    setupdatedValue({ ...updatedValue,\n      [fieldName]: e.target.innerText\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        contentEditable: editable,\n        onBlur: e => handle(e, \"item\"),\n        children: data.item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        contentEditable: editable,\n        onBlur: e => handle(e, \"units\"),\n        children: data.units\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        contentEditable: editable,\n        onBlur: e => handle(e, \"unitPrice\"),\n        children: data.unitPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"\\u20B9\", total.current]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), !editable ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            onClick: () => onDelete(data.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            onClick: () => seteditable(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            onEdit(data.id, updatedValue);\n            seteditable(false);\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Tabledata, \"XaJhSm2kaOisSGS5X0KH5Kb1ptA=\");\n\n_c = Tabledata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabledata\");","map":{"version":3,"sources":["/home/nv08/hosted_git/grocery_list/src/components/Tabledata.js"],"names":["React","useRef","useState","DeleteIcon","EditIcon","Tabledata","data","onDelete","onEdit","editable","seteditable","updatedValue","setupdatedValue","item","units","unitPrice","console","log","dt","total","parseInt","handle","e","fieldName","target","innerText","current","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAnB,EAA+C;AAAA;;AAC5D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC;AAC/CW,IAAAA,IAAI,EAAEP,IAAI,CAACO,IADoC;AAE/CC,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAFmC;AAG/CC,IAAAA,SAAS,EAAET,IAAI,CAACS;AAH+B,GAAD,CAAhD;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACA,QAAMC,KAAK,GAAGlB,MAAM,CAACmB,QAAQ,CAACd,IAAI,CAACQ,KAAN,CAAR,GAAuBM,QAAQ,CAACd,IAAI,CAACS,SAAN,CAAhC,CAApB;;AAEA,QAAMM,MAAM,GAAG,CAACC,CAAD,EAAIC,SAAJ,KAAkB;AAC/BX,IAAAA,eAAe,CAAC,EAAE,GAAGD,YAAL;AAAmB,OAACY,SAAD,GAAaD,CAAC,CAACE,MAAF,CAASC;AAAzC,KAAD,CAAf;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAI,QAAA,eAAe,EAAEhB,QAArB;AAA+B,QAAA,MAAM,EAAGa,CAAD,IAAOD,MAAM,CAACC,CAAD,EAAI,MAAJ,CAApD;AAAA,kBACGhB,IAAI,CAACO;AADR;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,eAAe,EAAEJ,QAArB;AAA+B,QAAA,MAAM,EAAGa,CAAD,IAAOD,MAAM,CAACC,CAAD,EAAI,OAAJ,CAApD;AAAA,kBACGhB,IAAI,CAACQ;AADR;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAI,QAAA,eAAe,EAAEL,QAArB;AAA+B,QAAA,MAAM,EAAGa,CAAD,IAAOD,MAAM,CAACC,CAAD,EAAI,WAAJ,CAApD;AAAA,kBACGhB,IAAI,CAACS;AADR;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAA,6BAAYI,KAAK,CAACO,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAWG,CAACjB,QAAD,gBACC;AAAA,gCACE;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAMF,QAAQ,CAACD,IAAI,CAACqB,EAAN;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,OAAO,EAAE,MAAMjB,WAAW,CAAC,IAAD;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAUC;AAAA,+BAEE;AACE,UAAA,OAAO,EAAE,MAAM;AACbF,YAAAA,MAAM,CAACF,IAAI,CAACqB,EAAN,EAAUhB,YAAV,CAAN;AACAD,YAAAA,WAAW,CAAC,KAAD,CAAX;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuCD;;GAtDuBL,S;;KAAAA,S","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport default function Tabledata({ data, onDelete, onEdit }) {\n  const [editable, seteditable] = useState(false);\n\n  const [updatedValue, setupdatedValue] = useState({\n    item: data.item,\n    units: data.units,\n    unitPrice: data.unitPrice,\n  });\n  console.log(dt);\n  const total = useRef(parseInt(data.units) * parseInt(data.unitPrice))\n\n  const handle = (e, fieldName) => {\n    setupdatedValue({ ...updatedValue, [fieldName]: e.target.innerText });\n  };\n\n  return (\n    <>\n      <tr>\n        <td contentEditable={editable} onBlur={(e) => handle(e, \"item\")}>\n          {data.item}\n        </td>\n        <td contentEditable={editable} onBlur={(e) => handle(e, \"units\")}>\n          {data.units}\n        </td>\n        <td contentEditable={editable} onBlur={(e) => handle(e, \"unitPrice\")}>\n          {data.unitPrice}\n        </td>\n        <td>&#8377;{total.current}</td>\n        {!editable ? (\n          <td>\n            <span>\n              <DeleteIcon onClick={() => onDelete(data.id)} />\n            </span>\n            <span>\n              <EditIcon onClick={() => seteditable(true)} />\n            </span>\n          </td>\n        ) : (\n          <td>\n            \n            <button\n              onClick={() => {\n                onEdit(data.id, updatedValue);\n                seteditable(false);\n              }}\n            >\n              \n              Save\n            </button>\n          </td>\n        )}\n      </tr>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}