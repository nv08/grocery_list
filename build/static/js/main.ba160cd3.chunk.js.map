{"version":3,"sources":["components/input.js","components/Tabledata.js","components/table.js","components/total.js","App.js","reportWebVitals.js","index.js"],"names":["Input","onadd","useState","item","setitem","units","setunits","unitPrice","setunitPrice","type","value","onChange","e","target","onClick","Tabledata","props","groceries","onEdit","length","map","data","i","contentEditable","onBlur","id","innerText","onDelete","Table","Total","reduce","acc","next","App","setgroceries","className","a","b","c","Math","floor","random","onAdd","filter","x","Number","console","log","deleteItem","key","Object","keys","findIndex","g","editItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba160cd3.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport default function Input({onadd}) {\n    const [item, setitem] = useState('')\n    const [units, setunits] = useState('')\n    const [unitPrice, setunitPrice] = useState('')\n    return (\n        <div>\n            <input type=\"text\" value={item} onChange={(e)=>{setitem(e.target.value)}}/>\n            <input type=\"text\" value={units} onChange={(e)=>{setunits(e.target.value)}}/>\n            <input type=\"text\" value={unitPrice} onChange={(e)=>{setunitPrice(e.target.value)}}/>\n            <button type=\"submit\" onClick={()=>onadd(item,units,unitPrice)}> Add Item </button>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport default function Tabledata(props) {\n    const {groceries} = props\n    const {onEdit} = props\n    return (\n        <>\n        {groceries.length>0?\n            groceries.map((data,i)=>\n            <tr key={i}>\n                <td contentEditable onBlur={(e)=>{onEdit(data.id,{item:e.target.innerText})}}>\n                    {data.item}\n                </td>\n                <td contentEditable onBlur={(e)=>{onEdit(data.id,{units:e.target.innerText})}}>\n                    {data.units}\n                </td>\n                <td contentEditable onBlur={(e)=>{onEdit(data.id,{unitPrice:e.target.innerText})}}>\n                    {data.unitPrice}\n                </td>\n                <td>\n                    &#8377;{  data.units * data.unitPrice}\n                </td>\n                <td>\n                   <DeleteIcon onClick={()=>props.onDelete(data.id)}/>\n                </td>\n            </tr>\n        ):\"KHALI HAI\"}\n\n           \n        </>\n    )\n}\n","import React from \"react\";\nimport Tabledata from \"./Tabledata\";\n\nexport default function Table(props) {\n  const { groceries } = props;\n  return (\n    <div>\n      {groceries.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Item Name</th>\n              <th>Units</th>\n              <th>Price Per Unit</th>\n              <th>Total Price</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <Tabledata {...props} />\n          </tbody>\n        </table>\n      ) : (\n        \"No data\"\n      )}\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function Total({groceries}) {\n    \n    const value = groceries.reduce((acc,next)=>{\n        acc+=next.units*next.unitPrice\n        return acc\n    },0)\n\n    return (\n        \n        <>\n            <span>  <h3> Grand Total: </h3>  &#8377; {value}</span>\n        </>\n    )\n}\n","import Input from './components/input'\nimport './App.css';\nimport Table from './components/table'\nimport { useState } from 'react';\nimport Total from './components/total';\n\n\nfunction App() {\n\n  const onAdd = (item,units,unitPrice)=>{\n      const id = Math.floor(Math.random() * 1000000); //on less value check for data\n      const data = {\n        id,item,units,unitPrice\n      }\n      setgroceries([...groceries,data])\n  }\n\n  const deleteItem = (id)=>{\n    \n      const data  = groceries.filter(x=>x.id!==Number(id))\n      setgroceries(data)\n      console.log(data);\n  }\n\n  const editItem = (id,value)=>{\n    const key = Object.keys(value)[0]\n    groceries[groceries.findIndex(g=>g.id===id)][key] = value[key]\n    setgroceries([...groceries])\n    console.log(groceries);\n  }\n  \n  const [groceries, setgroceries] = useState([\n    {\n      id:1,\n      item : \"Bread\",\n      units: 12,\n      unitPrice : 10\n    },\n    {\n      id:2,\n      item : \"Milk\",\n      units: 5,\n      unitPrice : 30\n    }\n  ])\n\n  return (\n    <div className=\"App\">\n      <h2> Grocery List</h2>\n      <Input onadd={(a,b,c)=>onAdd(a,b,c)}/>\n      <Table groceries={groceries} onDelete={(id)=>deleteItem(id)} onEdit={(id,value)=>editItem(id,value)}/>\n      <Total groceries = {groceries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}