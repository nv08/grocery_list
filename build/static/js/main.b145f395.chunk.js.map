{"version":3,"sources":["components/input.js","components/Tabledata.js","components/table.js","components/total.js","App.js","reportWebVitals.js","index.js"],"names":["Input","onadd","useState","item","setitem","units","setunits","unitPrice","setunitPrice","type","value","onChange","e","target","onClick","Tabledata","data","onDelete","onEdit","editable","seteditable","updatedValue","setupdatedValue","handle","fieldName","number","parseInt","innerText","contentEditable","onBlur","id","Table","props","groceries","length","map","i","Total","reduce","acc","next","App","setgroceries","className","a","b","c","Math","floor","random","onAdd","filter","x","Number","deleteItem","index","findIndex","g","editItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b145f395.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Input({ onadd }) {\n  const [item, setitem] = useState(\"\");\n  const [units, setunits] = useState(\"\");\n  const [unitPrice, setunitPrice] = useState(\"\");\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={item}\n        onChange={(e) => {\n          setitem(e.target.value);\n        }}\n      />\n      <input\n        type=\"text\"\n        value={units}\n        onChange={(e) => {\n          setunits(e.target.value);\n        }}\n      />\n      <input\n        type=\"text\"\n        value={unitPrice}\n        onChange={(e) => {\n          setunitPrice(e.target.value);\n        }}\n      />\n      <button\n        type=\"submit\"\n        onClick={() => {\n          onadd(item, units, unitPrice);\n          setitem(\"\");\n          setunits(\"\");\n          setunitPrice(\"\");\n        }}\n      >\n        Add Item\n      </button>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport default function Tabledata({ data, onDelete, onEdit }) {\n  const [editable, seteditable] = useState(false);\n\n  const [updatedValue, setupdatedValue] = useState({\n    item: data.item,\n    units: data.units,\n    unitPrice: data.unitPrice,\n  });\n\n  const handle = (e, fieldName) => {\n    const number = parseInt(e.target.innerText)\n      ? parseInt(e.target.innerText)\n      : e.target.innerText;\n    setupdatedValue({ ...updatedValue, [fieldName]: number });\n  };\n\n  return (\n    <>\n      <tr>\n        <td contentEditable={editable} onBlur={(e) => handle(e, \"item\")}>\n          {data.item}\n        </td>\n        <td contentEditable={editable} onBlur={(e) => handle(e, \"units\")}>\n          {data.units}\n        </td>\n        <td contentEditable={editable} onBlur={(e) => handle(e, \"unitPrice\")}>\n          {data.unitPrice}\n        </td>\n        <td>&#8377;{data.units * data.unitPrice}</td>\n        {!editable ? (\n          <td>\n            <span>\n              <DeleteIcon onClick={() => onDelete(data.id)} />\n            </span>\n            <span>\n              <EditIcon onClick={() => seteditable(true)} />\n            </span>\n          </td>\n        ) : (\n          <td>\n            <button\n              onClick={() => {\n                seteditable(false);\n                onEdit(data.id, updatedValue);\n              }}\n            >\n              Save\n            </button>\n          </td>\n        )}\n      </tr>\n    </>\n  );\n}\n","import React from \"react\";\nimport Tabledata from \"./Tabledata\";\n\nexport default function Table(props) {\n  const { groceries } = props;\n  return (\n    <div>\n      {groceries.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Item Name</th>\n              <th>Units</th>\n              <th>Price Per Unit</th>\n              <th>Total Price</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {groceries.map((data,i)=>\n              <Tabledata  data={data} onEdit={props.onEdit} onDelete={props.onDelete} />\n            )}\n            \n          </tbody>\n        </table>\n      ) : (\n        \"No data\"\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Total(props) {\n  const { groceries } = props;\n\n  const value = groceries.reduce((acc, next) => {\n    acc += next.units * next.unitPrice;\n    return acc;\n  }, 0);\n\n  return (\n    <>\n      <span> Grand Total: &#8377; {value}</span>\n    </>\n  );\n}\n","import Input from './components/input'\nimport './App.css';\nimport Table from './components/table'\nimport { useState } from 'react';\nimport Total from './components/total';\n\n\nfunction App() {\n  const [groceries, setgroceries] = useState([\n    {\n      id:1,\n      item : \"Bread\",\n      units: 12,\n      unitPrice : 10\n    },\n    {\n      id:2,\n      item : \"Milk\",\n      units: 5,\n      unitPrice : 30\n    }\n  ])\n  const onAdd = (item,units,unitPrice)=>{\n      const id = Math.floor(Math.random() * 1000000); //on less value check for data\n      const data = {\n        id,item,units,unitPrice\n      }\n      setgroceries([...groceries,data])\n  }\n\n  const deleteItem = (id)=>{\n    \n      const data  = groceries.filter(x=>x.id!==Number(id))\n      setgroceries(data)\n  }\n\n  const editItem = (id,data)=>{\n    \n    const index = groceries.findIndex(g=>g.id===id)\n    groceries[index] = {id,...data}\n    setgroceries([...groceries])\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <h2> Grocery List</h2>\n      <Input onadd={(a,b,c)=>onAdd(a,b,c)}/>\n      <Table groceries={groceries} onDelete={(id)=>deleteItem(id)} onEdit={(id,data)=>editItem(id,data)}/>\n      <Total groceries = {groceries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}